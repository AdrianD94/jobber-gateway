version: '3.9'
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data
  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - ./docker-volumes/data:/data/db
  mysql:
    container_name: mysql_container
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_USER=api
      - MYSQL_DB=jobber_auth
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=api
    ports:
      - '3306:3306'
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql
  postgres:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=jobber_reviews
    ports:
      - '5432:5432'
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=adi
      - RABBITMQ_DEFAULT_PASS=adi

  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    restart: always
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      xpack.security.enabled: "false"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
    ports:
      - '9200:9200'
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    # networks:
    #   - elastic
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.11.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports:
      - '5601:5601'
    # networks:
    #   - elastic
    volumes:
      - ./kibana.yaml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch
  notifications:
    container_name: notification_container
    build:
      context: ../server/2-notification-service
      dockerfile: Dockerfile.dev
    restart: always 
    ports:
      - 4001:4001
    # env_file: ../server/2-notification-service/.env
    environment:
      - ENABLE_APM=0
      - NODE_ENV=development
      - CLIENT_URL=http://localhost:3000
      - RABBITMQ_ENDPOINT=amqp://adi:adi@rabbitmq_container:5672
      - SENDER_EMAIL=sophie.gerhold32@ethereal.email
      - SENDER_EMAIL_PASSWORD=cK2Mcw63Q9aRD87H53
      - ELASTIC_SEARCH_URL=http://elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - rabbitmq

# networks:
#   elastic:
#     name: elastic